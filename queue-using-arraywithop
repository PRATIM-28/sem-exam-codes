#include<stdio.h>
#include<stdlib.h>

struct queue  
{
    int size;
    int f;
    int r;
    int *arr;
};

int isempty(struct queue *q)
{
    if(q->r==q->f)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int isfull(struct queue *q)
{
    if(q->r==q->size-1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
void enque(struct queue *q,int val)
{
    if(isfull(q))
    {
        printf("queue overflow\n");
    }
    else
    {
        q->r++;
        q->arr[q->r]=val;
    }
}

int deque(struct queue *q)
{
    if(isempty(q))
    {
        printf("stack underflow");
    }
    else
    {
        int val=q->f;
        q->f++;
        return val;
    }
    return 1;
}

int main()
{
    struct queue *q=(struct queue*)(malloc(sizeof(struct queue)));
    q->size=100;
    q->r=-1;
    q->f=-1;
    q->arr=(int*)malloc(q->size*sizeof(int));
    if(isempty(q))
    {
        printf("queue is empty\n");
    }
    enque(q,10);
    enque(q,20);
    enque(q,30);
    enque(q,40);
    for(int i=q->f+1;i<=q->r;i++)
    {
        printf("%d ",q->arr[i]);
    }
    deque(q);
    printf("\n");
    for(int i=q->f+1;i<=q->r;i++)
    {
        printf("%d ",q->arr[i]);
    }
    
        if(isempty(q))
    {
        printf("queue is empty");
    }
    
    return 0;
}
